#!/usr/bin/env python3
"""
Script de prueba para el m√≥dulo de visualizaci√≥n reconstruido.
"""

import sys
import os

# A√±adir src al path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

try:
    from visualization.plotter import BardoVisualizer, quick_visualize
    from qiskit import QuantumCircuit
    print("‚úÖ M√≥dulo de visualizaci√≥n importado correctamente")
except ImportError as e:
    print(f"‚ùå Error importando el m√≥dulo de visualizaci√≥n: {e}")
    sys.exit(1)

def test_visualization():
    """Prueba todas las funcionalidades de visualizaci√≥n."""
    print("üß™ Probando visualizaciones del Bardo...")

    # Datos de ejemplo
    counts = {'00': 256, '01': 245, '10': 268, '11': 255}
    states = ['Chonyid Bardo', 'Sidpa Bardo', 'Luz Clara', 'Intermedio']
    probabilities = [0.25, 0.35, 0.25, 0.15]

    # Crear visualizador
    visualizer = BardoVisualizer()

    # Probar cada m√©todo
    print("1. Probando visualizaci√≥n de resultados cu√°nticos...")
    fig1 = visualizer.plot_quantum_results(counts)

    print("2. Probando gr√°fico de estados del Bardo...")
    fig2 = visualizer.plot_bardo_states(states, probabilities)

    print("3. Probando visualizaci√≥n r√°pida...")
    fig3 = quick_visualize(counts, "Prueba R√°pida")

    print("4. Probando guardado de visualizaciones...")
    visualizer.save_all_visualizations(counts, states, probabilities, QuantumCircuit(2))

    print("‚úÖ Todas las pruebas completadas exitosamente")

    # Mostrar gr√°ficos
    import matplotlib.pyplot as plt
    plt.show()

if __name__ == "__main__":
    test_visualization()
